{"version":3,"sources":["context/objective/objectiveContext.js","Typeahead.js","context/objective/objectiveReducer.js","context/types.js","context/objective/ObjectiveState.js","ObjectiveList.js","App.js","index.js"],"names":["objectiveContext","createContext","Typeahead","list","useContext","ObjectiveContext","objective","options","populate","substringBold","inputBold","hoverHighlight","navigable","outsideClose","setObjective","useState","open","setOpen","colorPick","colorList","colorHighlightIndexes","inputData","setInputData","filteredList","e","filter","item","spaceColorNames","toLowerCase","includes","target","value","replace","trim","isListOpen","length","onInputEvent","key","undefined","type","onLiKeyDown","innerText","setLiHtml","index","boldText","slice","useEffect","document","removeEventListener","onClickEscape","containerRef","current","contains","useRef","addEventListener","ref","className","onKeyDown","onFocus","onChange","name","map","search","placeholder","autoFocus","tabIndex","onClick","onMouseOver","dangerouslySetInnerHTML","__html","initialState","state","action","payload","ObjectiveState","children","useReducer","objectiveReducer","dispatch","Provider","ObjectiveList","objectivesComplete","App","href","rel","ReactDOM","render","getElementById"],"mappings":"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AC,EAAD,CAAKnF,KAxJF,CACjB,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,iBAIyC4C,SAASwC,eAAe,U","file":"static/js/main.97741f9b.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst objectiveContext = createContext();\r\n\r\nexport default objectiveContext;\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ObjectiveContext from './context/objective/objectiveContext'\r\n\r\nconst Typeahead = ({ list }) => {\r\n    const objectiveContext = useContext(ObjectiveContext)\r\n    const {\r\n        objective: { options, populate, substringBold, inputBold, hoverHighlight, navigable, outsideClose },\r\n        objective,\r\n        setObjective\r\n    } = objectiveContext\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    const [inputData, setInputData] = useState({\r\n        colorPick: '',\r\n        colorList: [],\r\n        colorHighlightIndexes: []\r\n    })\r\n\r\n    const { colorPick, colorList, colorHighlightIndexes } = inputData\r\n\r\n\r\n    const onChange = (e) => {\r\n        setInputData({\r\n            ...inputData,\r\n            [e.target.name]: e.target.value,\r\n            colorList: filteredList(e),\r\n            colorHighlightIndexes: filteredList(e).map(item => spaceColorNames(item).toLowerCase().search(e.target.value))\r\n        })\r\n        // console.log(colorHighlightIndexes)\r\n    }\r\n\r\n    const filteredList = (e) => list.filter(item => spaceColorNames(item).toLowerCase().includes(e.target.value.toLowerCase()))\r\n\r\n    const spaceColorNames = (item) => item.replace(/([A-Z])/g, ' $1').trim();\r\n\r\n    const isListOpen = () => open && colorList.length > 0 && colorPick !== '' ? true : false\r\n\r\n    const onInputEvent = (e) => {\r\n        if (e.key === 'Escape') {\r\n            setOpen(false)\r\n        } else if (e.key === 'Tab') {\r\n            !navigable && setObjective({ ...objective, navigable: true })\r\n        } else if (e.key !== undefined) {\r\n            !options && !substringBold && !inputBold &&\r\n                setObjective({ ...objective, options: true, substringBold: true, inputBold: true })\r\n            setOpen(true)\r\n        } else if (e.type === 'focus') {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    const onLiKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setInputData({\r\n                ...inputData,\r\n                colorPick: e.target.innerText,\r\n                colorList: list.filter(item => spaceColorNames(item).toLowerCase().includes(e.target.innerText.toLowerCase()))\r\n            })\r\n            setOpen(false)\r\n        } else if (e.key === 'Escape') {\r\n            setOpen(false)\r\n        }\r\n    }\r\n\r\n    const setLiHtml = (item, index) => {\r\n        const boldText = item.slice(colorHighlightIndexes[index], colorPick.length + colorHighlightIndexes[index])\r\n        const text = `${item.replace(boldText, `<b>${boldText}</b>`)}`\r\n        return text\r\n    }\r\n\r\n\r\n    // handling for closing list on outside click\r\n    useEffect(() => {\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", onClickEscape);\r\n        };\r\n    });\r\n\r\n    const onClickEscape = (e) => {\r\n        if (containerRef.current.contains(e.target)) {\r\n            return;\r\n        }\r\n        isListOpen() && !outsideClose && setObjective({ ...objective, outsideClose: true })\r\n        setOpen(false)\r\n    }\r\n\r\n    const containerRef = useRef();\r\n    document.addEventListener(\"mousedown\", onClickEscape);\r\n\r\n\r\n    return (\r\n        <div ref={containerRef} className='container'>\r\n            <input\r\n                onKeyDown={onInputEvent}\r\n                onFocus={onInputEvent}\r\n                className='color-input'\r\n                onChange={onChange}\r\n                value={colorPick}\r\n                name=\"colorPick\"\r\n                type=\"text\"\r\n                placeholder='Type to choose color...'\r\n            />\r\n            {isListOpen() &&\r\n                <ul className='dropdown-parent'>\r\n                    {colorList.map((item, index) => {\r\n                        return (\r\n                            <li\r\n                                className='dropdown-item'\r\n                                key={index}\r\n                                autoFocus\r\n                                tabIndex={0}\r\n                                onKeyDown={onLiKeyDown}\r\n                                onClick={() => {\r\n                                    setOpen(false)\r\n                                    setInputData({ ...inputData, colorPick: spaceColorNames(item) })\r\n                                    !populate && setObjective({ ...objective, populate: true })\r\n                                }}\r\n                                onMouseOver={() => !hoverHighlight && setObjective({ ...objective, hoverHighlight: true })}\r\n                                dangerouslySetInnerHTML={{ __html: setLiHtml(spaceColorNames(item), index) }}\r\n                            />\r\n                        )\r\n                    })}\r\n                </ul>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTypeahead.propTypes = {\r\n    list: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Typeahead\r\n","import { SET_OBJECTIVE } from '../types'\r\n\r\nconst initialState = {}\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case SET_OBJECTIVE:\r\n            return { ...payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","export const SET_OBJECTIVE = 'SET_OBJECTIVE'\r\n","import React, { useReducer } from \"react\";\r\nimport ObjectiveContext from \"./objectiveContext\";\r\nimport objectiveReducer from \"./objectiveReducer\";\r\n\r\nimport {\r\n    SET_OBJECTIVE\r\n\r\n} from \"../types\";\r\n\r\nconst ObjectiveState = ({ children }) => {\r\n    const initialState = {\r\n        options: false,\r\n        populate: false,\r\n        substringBold: false,\r\n        inputBold: false,\r\n        hoverHighlight: false,\r\n        navigable: false,\r\n        outsideClose: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(objectiveReducer, initialState);\r\n\r\n    // const setAlert = () => {\r\n    const setObjective = (item) => {\r\n        dispatch({\r\n            type: SET_OBJECTIVE,\r\n            payload: item\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ObjectiveContext.Provider\r\n            value={{\r\n                objective: state,\r\n                setObjective\r\n            }}\r\n        >\r\n            {children}\r\n        </ObjectiveContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ObjectiveState;\r\n","import React, { useContext } from 'react'\r\nimport ObjectiveContext from './context/objective/objectiveContext'\r\n\r\nconst ObjectiveList = () => {\r\n    const objectiveContext = useContext(ObjectiveContext)\r\n    const {\r\n        objective: { options, populate, substringBold, inputBold, hoverHighlight, navigable, outsideClose },\r\n        setObjective\r\n    } = objectiveContext\r\n\r\n    const reset = () => {\r\n        setObjective({\r\n            options: false,\r\n            populate: false,\r\n            substringBold: false,\r\n            inputBold: false,\r\n            hoverHighlight: false,\r\n            navigable: false,\r\n            outsideClose: false\r\n        })\r\n    }\r\n\r\n    const objectivesComplete = () => {\r\n        if (options && populate && substringBold && inputBold && hoverHighlight && navigable && outsideClose) return true\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <ol className='objective-list'>\r\n                <li className={options ? 'active' : undefined} >As the user types in the input field, a list of options should appear  below it.</li>\r\n                <li className={populate ? 'active' : undefined} >Clicking on a list item should populate the input with the selected item's value and hide the list.</li>\r\n                <li className={substringBold ? 'active' : undefined} >As the user types, the matching substring within the dipslayed options should be bold.</li>\r\n                <li className={inputBold ? 'active' : undefined} >For visible options, style the substring the user has entered as bold.</li>\r\n                <li className={hoverHighlight ? 'active' : undefined} >Mousing over a list item should highlight it, at least darkening its background color.</li>\r\n                <li className={navigable ? 'active' : undefined} >The input and list should also be navigable using the keyboard.</li>\r\n                <li className={outsideClose ? 'active' : undefined} >Clicking outside the input or the list should close the list.</li>\r\n                {objectivesComplete() &&\r\n                    <>\r\n                        <li className='active-plus active'>Impress hiring team.</li>\r\n                        <button onClick={reset}>reset</button>\r\n                    </>\r\n                }\r\n            </ol>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ObjectiveList\r\n","import React from 'react'\r\nimport Typeahead from './Typeahead'\r\nimport ObjectiveState from './context/objective/ObjectiveState'\r\nimport ObjectiveList from './ObjectiveList'\r\n\r\nconst App = ({ list }) => {\r\n\r\n    return (\r\n        <ObjectiveState>\r\n\r\n            <div className=\"pageWrapper\">\r\n                <div className=\"container\">\r\n                    <h1><a href='http://gavin-carter.com' target='_blank' rel=\"noopener noreferrer\">Gavin Carter</a> <span>Submission</span></h1>\r\n                </div>\r\n                <section>\r\n                    <Typeahead list={list} />\r\n                    <ObjectiveList />\r\n                </section>\r\n            </div>\r\n        </ObjectiveState>\r\n\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App'\r\nimport './css/main.css'\r\n\r\nconst colorsList = [\r\n  \"AliceBlue\",\r\n  \"AntiqueWhite\",\r\n  \"Aqua\",\r\n  \"Aquamarine\",\r\n  \"Azure\",\r\n  \"Beige\",\r\n  \"Bisque\",\r\n  \"Black\",\r\n  \"BlanchedAlmond\",\r\n  \"Blue\",\r\n  \"BlueViolet\",\r\n  \"Brown\",\r\n  \"BurlyWood\",\r\n  \"CadetBlue\",\r\n  \"Chartreuse\",\r\n  \"Chocolate\",\r\n  \"Coral\",\r\n  \"CornflowerBlue\",\r\n  \"Cornsilk\",\r\n  \"Crimson\",\r\n  \"Cyan\",\r\n  \"DarkBlue\",\r\n  \"DarkCyan\",\r\n  \"DarkGoldenRod\",\r\n  \"DarkGray\",\r\n  \"DarkGrey\",\r\n  \"DarkGreen\",\r\n  \"DarkKhaki\",\r\n  \"DarkMagenta\",\r\n  \"DarkOliveGreen\",\r\n  \"DarkOrange\",\r\n  \"DarkOrchid\",\r\n  \"DarkRed\",\r\n  \"DarkSalmon\",\r\n  \"DarkSeaGreen\",\r\n  \"DarkSlateBlue\",\r\n  \"DarkSlateGray\",\r\n  \"DarkSlateGrey\",\r\n  \"DarkTurquoise\",\r\n  \"DarkViolet\",\r\n  \"DeepPink\",\r\n  \"DeepSkyBlue\",\r\n  \"DimGray\",\r\n  \"DimGrey\",\r\n  \"DodgerBlue\",\r\n  \"FireBrick\",\r\n  \"FloralWhite\",\r\n  \"ForestGreen\",\r\n  \"Fuchsia\",\r\n  \"Gainsboro\",\r\n  \"GhostWhite\",\r\n  \"Gold\",\r\n  \"GoldenRod\",\r\n  \"Gray\",\r\n  \"Grey\",\r\n  \"Green\",\r\n  \"GreenYellow\",\r\n  \"HoneyDew\",\r\n  \"HotPink\",\r\n  \"IndianRed\",\r\n  \"Indigo\",\r\n  \"Ivory\",\r\n  \"Khaki\",\r\n  \"Lavender\",\r\n  \"LavenderBlush\",\r\n  \"LawnGreen\",\r\n  \"LemonChiffon\",\r\n  \"LightBlue\",\r\n  \"LightCoral\",\r\n  \"LightCyan\",\r\n  \"LightGoldenRodYellow\",\r\n  \"LightGray\",\r\n  \"LightGrey\",\r\n  \"LightGreen\",\r\n  \"LightPink\",\r\n  \"LightSalmon\",\r\n  \"LightSeaGreen\",\r\n  \"LightSkyBlue\",\r\n  \"LightSlateGray\",\r\n  \"LightSlateGrey\",\r\n  \"LightSteelBlue\",\r\n  \"LightYellow\",\r\n  \"Lime\",\r\n  \"LimeGreen\",\r\n  \"Linen\",\r\n  \"Magenta\",\r\n  \"Maroon\",\r\n  \"MediumAquaMarine\",\r\n  \"MediumBlue\",\r\n  \"MediumOrchid\",\r\n  \"MediumPurple\",\r\n  \"MediumSeaGreen\",\r\n  \"MediumSlateBlue\",\r\n  \"MediumSpringGreen\",\r\n  \"MediumTurquoise\",\r\n  \"MediumVioletRed\",\r\n  \"MidnightBlue\",\r\n  \"MintCream\",\r\n  \"MistyRose\",\r\n  \"Moccasin\",\r\n  \"NavajoWhite\",\r\n  \"Navy\",\r\n  \"OldLace\",\r\n  \"Olive\",\r\n  \"OliveDrab\",\r\n  \"Orange\",\r\n  \"OrangeRed\",\r\n  \"Orchid\",\r\n  \"PaleGoldenRod\",\r\n  \"PaleGreen\",\r\n  \"PaleTurquoise\",\r\n  \"PaleVioletRed\",\r\n  \"PapayaWhip\",\r\n  \"PeachPuff\",\r\n  \"Peru\",\r\n  \"Pink\",\r\n  \"Plum\",\r\n  \"PowderBlue\",\r\n  \"Purple\",\r\n  \"RebeccaPurple\",\r\n  \"Red\",\r\n  \"RosyBrown\",\r\n  \"RoyalBlue\",\r\n  \"SaddleBrown\",\r\n  \"Salmon\",\r\n  \"SandyBrown\",\r\n  \"SeaGreen\",\r\n  \"SeaShell\",\r\n  \"Sienna\",\r\n  \"Silver\",\r\n  \"SkyBlue\",\r\n  \"SlateBlue\",\r\n  \"SlateGray\",\r\n  \"SlateGrey\",\r\n  \"Snow\",\r\n  \"SpringGreen\",\r\n  \"SteelBlue\",\r\n  \"Tan\",\r\n  \"Teal\",\r\n  \"Thistle\",\r\n  \"Tomato\",\r\n  \"Turquoise\",\r\n  \"Violet\",\r\n  \"Wheat\",\r\n  \"White\",\r\n  \"WhiteSmoke\",\r\n  \"Yellow\",\r\n  \"YellowGreen\",\r\n];\r\n\r\n\r\nReactDOM.render(<App list={colorsList} />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}